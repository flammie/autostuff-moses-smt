## Include this to automake project to evaluate translations with ter

## Copyright (c) 2014 Dublin City University / CNGL

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.



if CAN_TER
# L1 to L2

# Moses baseline
%.$(MOSES_BASELINE_INFIX).$(TER_L1_L2): %.$(MOSES_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(MOSES_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml > $@

%.$(MOSES_HIERARCHICAL_INFIX).$(TER_L1_L2): %.$(MOSES_HIERARCHICAL_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(MOSES_HIERARCHICAL_INFIX).$(TRANSLATION_L1_L2).sgml > $@

# Morfessor baseline
%.$(MORFESSOR_BASELINE_INFIX).$(TER_L1_L2): %.$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml > $@

# Flatcat baseline
%.$(FLATCAT_BASELINE_INFIX).$(TER_L1_L2): %.$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml > $@

# Ape
%.$(APERTIUM_BASELINE_INFIX).$(TER_L1_L2): %.$(APERTIUM_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(APERTIUM_BASELINE_INFIX).$(TRANSLATION_L1_L2).sgml > $@

%.$(APERTIUM_SEG_INFIX).$(TER_L1_L2): %.$(APERTIUM_SEG_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(APERTIUM_SEG_INFIX).$(TRANSLATION_L1_L2).sgml > $@

# HFST Baseline {{{
%.$(HFST_COMPOUNDS_INFIX).$(TER_L1_L2): %.$(HFST_COMPOUNDS_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(HFST_COMPOUNDS_INFIX).$(TRANSLATION_L1_L2).sgml > $@

%.$(HFST_MORPHS_INFIX).$(TER_L1_L2): %.$(HFST_MORPHS_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(HFST_MORPHS_INFIX).$(TRANSLATION_L1_L2).sgml > $@

%.$(MOSES_FACTORED_INFIX).$(TER_L1_L2): %.$(MOSES_FACTORED_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(MOSES_FACTORED_INFIX).$(TRANSLATION_L1_L2).sgml > $@

%.$(MOSES_HUNPOSED_INFIX).$(TER_L1_L2): %.$(MOSES_HUNPOSED_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(MOSES_HUNPOSED_INFIX).$(TRANSLATION_L1_L2).sgml > $@

%.$(MOSES_CRFED_INFIX).$(TER_L1_L2): %.$(MOSES_CRFED_INFIX).$(TRANSLATION_L1_L2).sgml %.ref.$(L2).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L2).sgml -h $*.$(MOSES_CRFED_INFIX).$(TRANSLATION_L1_L2).sgml > $@



#  L2 to L1 {{{
#
#  Mose Baseline {{{
%.$(MOSES_BASELINE_INFIX).$(TER_L2_L1): %.$(MOSES_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(MOSES_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml > $@

%.$(MOSES_HIERARCHICAL_INFIX).$(TER_L2_L1): %.$(MOSES_HIERARCHICAL_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(MOSES_HIERARCHICAL_INFIX).$(TRANSLATION_L2_L1).sgml > $@

# Morfessor Baseline {{{
%.$(MORFESSOR_BASELINE_INFIX).$(TER_L2_L1): %.$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml > $@

# Flatcat {{{
%.$(FLATCAT_BASELINE_INFIX).$(TER_L2_L1): %.$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml > $@

# Apertium baseline
%.$(APERTIUM_BASELINE_INFIX).$(TER_L2_L1): %.$(APERTIUM_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(APERTIUM_BASELINE_INFIX).$(TRANSLATION_L2_L1).sgml > $@

%.$(APERTIUM_SEG_INFIX).$(TER_L2_L1): %.$(APERTIUM_SEG_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(APERTIUM_SEG_INFIX).$(TRANSLATION_L2_L1).sgml > $@

# HFST Baseline
%.$(HFST_COMPOUNDS_INFIX).$(TER_L2_L1): %.$(HFST_COMPOUNDS_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(HFST_COMPOUNDS_INFIX).$(TRANSLATION_L2_L1).sgml > $@

%.$(HFST_MORPHS_INFIX).$(TER_L2_L1): %.$(HFST_MORPHS_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(HFST_MORPHS_INFIX).$(TRANSLATION_L2_L1).sgml > $@

%.$(MOSES_FACTORED_INFIX).$(TER_L2_L1): %.$(MOSES_FACTORED_INFIX).$(TRANSLATION_L2_L1).sgml %.ref.$(L1).sgml
	$(JAVA) -jar $(TERJAR) -r $*.ref.$(L1).sgml -h $*.$(MOSES_FACTORED_INFIX).$(TRANSLATION_L2_L1).sgml > $@

endif

# vim: set ft=automake:
