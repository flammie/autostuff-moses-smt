## Include to autoproject to split files properly in to parts.

## Copyright (c) 2014 Dublin City University / CNGL

## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.

# quick sampling testes
SAMPLE_SIZE=50000
# devset and test set
DEVSET_SIZE=2000
TESTSET_SIZE=2000
# held out must be at least devset + testset for normal operation
TRAIN_HELDOUT=4000

# {{{ L1 split to TRAIN DEV TEST
# TRAIN = ALL 
%.train.$(L1).text: %.$(L1).text
	head -n -$(TRAIN_HELDOUT) < $< > $@

%.dev.$(L1).text: %.$(L1).text
	tail -n $(TRAIN_HELDOUT) < $< | head -n $(DEVSET_SIZE) > $@

%.test.$(L1).text: %.$(L1).text
	tail -n $(TRAIN_HELDOUT) < $< | tail -n $(TESTSET_SIZE) > $@
# }}}

# {{{ L1 split for smaller tests
# Split into 2
%.half.$(L1).text: %.$(L1).text
	split -d -l `wc -l < $< | $(SED) -e 's/$$/\/2/' | bc`  $< $*.halves.$(L1).
	cp -v $*.halves.$(L1).00 $@

# split into 4
%.quarter.$(L1).text: %.$(L1).text
	split -d -l `wc -l < $< | $(SED) -e 's/$$/\/4/' | bc`  $< $*.quarters.$(L1).
	cp -v $*.quarters.$(L1).00 $@

# split into 8
%.eighth.$(L1).text: %.$(L1).text
	split -d -l `wc -l < $< | $(SED) -e 's/$$/\/8/' | bc`  $< $*.eighths.$(L1).
	cp -v $*.eighths.$(L1).00 $@
# }}}

# {{{ L1 split to sample
%.sample.$(L1).text: %.$(L1).text
	split -d -l $(SAMPLE_SIZE)  $*.samples.$(L1).
	cp -v $*.samples.$(L1).03 $@
# }}}

# {{{ TRAIN/DEV/TEST for L2
%.train.$(L2).text: %.$(L2).text
	head -n -$(TRAIN_HELDOUT) < $< > $@

%.dev.$(L2).text: %.$(L2).text
	tail -n $(TRAIN_HELDOUT) < $< | head -n $(DEVSET_SIZE) > $@

%.test.$(L2).text: %.$(L2).text
	tail -n $(TRAIN_HELDOUT) < $< | tail -n $(TESTSET_SIZE) > $@
# }}}

# {{{ L2 split for smaller tests
%.half.$(L2).text: %.$(L2).text
	split -d -l `wc -l < $< | $(SED) -e 's/$$/\/2/' | bc`  $< $*.halves.$(L2).
	cp -v $*.halves.$(L2).00 $@

%.quarter.$(L2).text: %.$(L2).text
	split -d -l `wc -l < $< | $(SED) -e 's/$$/\/4/' | bc`  $< $*.quarters.$(L2).
	cp -v $*.quarters.$(L2).00 $@

%.eighth.$(L2).text: %.$(L2).text
	split -d -l `wc -l < $< | $(SED) -e 's/$$/\/8/' | bc`  $< $*.eighths.$(L2).
	cp -v $*.eighths.$(L2).00 $@

# }}}

# {{{ L2 split to sample
%.sample.$(L1).text: %.$(L1).text
	split -d -l $(SAMPLE_SIZE)  $*.samples.$(L1).
	cp -v $*.samples.$(L1).03 $@
# }}}

# vim: set ft=automake foldmethod=marker:
