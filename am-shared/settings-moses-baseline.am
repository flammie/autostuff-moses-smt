## Include to automake project to create baseline settings based on corpus name.

# MOSES_BASELINE_PREFIX is the prefix for the corpus filename 

.PHONY: moses-baseline morfessor-baseline flatcat-baseline \
	apertium-baseline hfst-baseline \
	moses-$(L1) moses-$(L2) moses-$(L1)-$(L2) moses-$(L2)-$(L1) \
	morfessor-$(L1) morfessor-$(L2) morfessor-$(L1)-$(L2) morfessor-$(L1)-$(L2)\
	flatcat-$(L1) flatcat-$(L2) flatcat-$(L1)-$(L2) flatcat-$(L2)-$(L1) \
	moses-$(L1)-$(L2)-evals moses-$(L2)-$(L1)-evals \
	morfessor-$(L1)-$(L2)-evals morfessor-$(L2)-$(L1)-evals \
	flatcat-$(L1)-$(L2)-evals flatcat-$(L2)-$(L1)-evals \
	apertium-$(L1)-$(L2)-evals apertium-$(L2)-$(L1)-evals \
	hfst-$(L1)-$(L2)-evals hfst-$(L2)-$(L1)-evals

# Settings for baseline language models
# L1 to L2
MOSES_BASELINE_L2=$(MOSES_BASELINE_PREFIX).blm.$(L2)
MOSES_BASELINE_L1_L2=$(MOSES_BASELINE_PREFIX).btm.$(L1)-$(L2)
MOSES_BASELINE_L1_L2_DIR=$(MOSES_BASELINE_PREFIX).$(L1)-$(L2)

# L2 to L1
MOSES_BASELINE_L1=$(MOSES_BASELINE_PREFIX).blm.$(L1)
MOSES_BASELINE_L2_L1=$(MOSES_BASELINE_PREFIX).btm.$(L2)-$(L1)
MOSES_BASELINE_L2_L1_DIR=$(MOSES_BASELINE_PREFIX).$(L2)-$(L1)

if CAN_MORFESS
MOSES_MORFESSOR1BEST_PREFIX=$(MOSES_BASELINE_PREFIX).morfessor.1best

# L1 to L2
MOSES_MORFESSOR1BEST_L2=$(MOSES_MORFESSOR1BEST_PREFIX).blm.$(L1)
MOSES_MORFESSOR1BEST_L1_L2=$(MOSES_MORFESSOR1BEST_PREFIX).btm.$(L1)-$(L2)
MOSES_MORFESSOR1BEST_L1_L2_DIR=$(MOSES_MORFESSOR1BEST_PREFIX).$(L1)-$(L2)

# L2 to L1
MOSES_MORFESSOR1BEST_L1=$(MOSES_MORFESSOR1BEST_PREFIX).blm.$(L2)
MOSES_MORFESSOR1BEST_L2_L1=$(MOSES_MORFESSOR1BEST_PREFIX).btm.$(L2)-$(L1)
MOSES_MORFESSOR1BEST_L2_L1_DIR=$(MOSES_MORFESSOR1BEST_PREFIX).$(L2)-$(L1)

endif

if CAN_FLATCAT
MOSES_FLATCAT1BEST_PREFIX=$(MOSES_BASELINE_PREFIX).flatcat.1best
# from L1 to L2
MOSES_FLATCAT1BEST_L2=$(MOSES_FLATCAT1BEST_PREFIX).blm.$(L2)
MOSES_FLATCAT1BEST_L1_L2=$(MOSES_FLATCAT1BEST_PREFIX).btm.$(L1)-$(L2)
MOSES_FLATCAT1BEST_L1_L2_DIR=$(MOSES_FLATCAT1BEST_PREFIX).$(L1)-$(L2)

# From L2 to L1
MOSES_FLATCAT1BEST_L1=$(MOSES_FLATCAT1BEST_PREFIX).blm.$(L1)
MOSES_FLATCAT1BEST_L2_L1=$(MOSES_FLATCAT1BEST_PREFIX).btm.$(L2)-$(L1)
MOSES_FLATCAT1BEST_L2_L1_DIR=$(MOSES_FLATCAT1BEST_PREFIX).$(L2)-$(L1)


endif


if CAN_HFST
MOSES_HFST1BESTCOMP_PREFIX=$(MOSES_BASELINE_PREFIX).hfst.1best-comp
MOSES_HFST1BESTMORPH_PREFIX=$(MOSES_BASELINE_PREFIX).hfst.1best-morphs
# L1 to L2
MOSES_HFST1BESTCOMP_L2=$(MOSES_HFST1BESTCOMP_PREFIX).blm.$(L1)
MOSES_HFST1BESTCOMP_L1_L2=$(MOSES_HFST1BESTCOMP_PREFIX).btm.$(L1)-$(L2)
MOSES_HFST1BESTCOMP_L1_L2_DIR=$(MOSES_HFST1BESTCOMP_PREFIX).$(L1)-$(L2)
MOSES_HFST1BESTMORPH_L2=$(MOSES_HFST1BESTMORPH_PREFIX).blm.$(L1)
MOSES_HFST1BESTMORPH_L1_L2=$(MOSES_HFST1BESTMORPH_PREFIX).btm.$(L1)-$(L2)
MOSES_HFST1BESTMORPH_L1_L2_DIR=$(MOSES_HFST1BESTMORPH_PREFIX).$(L1)-$(L2)


# L2 to L1
MOSES_HFST1BESTCOMP_L1=$(MOSES_HFST1BESTCOMP_PREFIX).blm.$(L2)
MOSES_HFST1BESTCOMP_L2_L1=$(MOSES_HFST1BESTCOMP_PREFIX).btm.$(L2)-$(L1)
MOSES_HFST1BESTCOMP_L2_L1_DIR=$(MOSES_HFST1BESTCOMP_PREFIX).$(L2)-$(L1)
MOSES_HFST1BESTMORPH_L1=$(MOSES_HFST1BESTMORPH_PREFIX).blm.$(L2)
MOSES_HFST1BESTMORPH_L2_L1=$(MOSES_HFST1BESTMORPH_PREFIX).btm.$(L2)-$(L1)
MOSES_HFST1BESTMORPH_L2_L1_DIR=$(MOSES_HFST1BESTMORPH_PREFIX).$(L2)-$(L1)

endif

# Settings for baseline truecasing
TRUECASE_BASELINE_L2=$(BASELINE_CORPUS).truecaser.$(L2)
TRUECASE_BASELINE_L1=$(BASELINE_CORPUS).truecaser.$(L1)

# Settings for baseline segmenters for L2
if CAN_MORFESS
MORFESSOR_L2=$(BASELINE_CORPUS).$(L2).morfessor
endif
if CAN_FLATCAT
FLATCAT_L2=$(BASELINE_CORPUS).$(L2).flatcat
FLATCAT_L2_CONF=$(BASELINE_CORPUS).$(L2).flatcat.ini
endif

# Convenience variables for models
TRUECASE_MODELS=$(TRUECASE_BASELINE_L2) $(TRUECASE_BASELINE_L1)
LANGUAGE_MODELS_L2=$(MOSES_BASELINE_L2) \
				$(MOSES_MORFESSOR1BEST_L2) \
				$(MOSES_FLATCAT1BEST_L2)
LANGUAGE_MODELS_L1=$(MOSES_BASELINE_L1)
moses-$(L1): $(MOSES_BASELINE_L1)
moses-$(L2): $(MOSES_BASELINE_L2)
morfessor-$(L2): $(MORFESSOR_BASELINE_L2)
flatcat-$(L2): $(FLATCAT_BASELINE_L2)
LANGUAGE_MODELS=$(LANGUAGE_MODELS_L2) $(LANGUAGE_MODELS_L1)
TRANSLATION_MODELS_L1_L2=$(MOSES_BASELINE_L1_L2) \
				   $(MOSES_MORFESSOR1BEST_L1_L2) \
				   $(MOSES_FLATCAT1BEST_L1_L2)
TRANSLATION_MODELS_L2_L1=$(MOSES_BASELINE_L2_L1) \
				   $(MOSES_MORFESSOR1BEST_L2_L1) \
				   $(MOSES_FLATCAT1BEST_L2_L1)
TRANSLATION_MODELS=$(TRANSLATION_MODELS_L1_L2) $(TRANSLATION_MODELS_L2_L1)
MODELS=$(TRUECASE_MODELS) $(LANGUAGE_MODELS) $(TRANSLATION_MODELS)
moses-$(L1)-$(L2): $(MOSES_BASELINE_L1_L2)
moses-$(L2)-$(L1): $(MOSES_BASELINE_L2_L1)
morfessor-$(L1)-$(L2): $(MOSES_MORFESSOR1BEST_L1_L2)
morfessor-$(L2)-$(L1): $(MOSES_MORFESSOR1BEST_L2_L1)
flatcat-$(L1)-$(L2): $(MOSES_FLATCAT1BEST_L1_L2)
flatcat-$(L2)-$(L1): $(MOSES_FLATCAT1BEST_L2_L1)

# Settings for baseline translations
TRANSLATION_L1_L2=$(L1)-$(L2).translated.$(L2)
TRANSLATION_L2_L1=$(L2)-$(L1).translated.$(L1)
TRANSLATION_L1_SEGMENTED_L2=$(L1)-$(L2).translated-segments.$(L2)

# baseline
MOSES_BASELINE_INFIX=baseline-moses
TRANSLATIONS_L1_L2=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(TRANSLATION_L1_L2)
TRANSLATIONS_L2_L1=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(TRANSLATION_L2_L1)
MOSES_TUNED_INFIX=baseline-moses-tuned
if CAN_MORFESS
MORFESSOR_BASELINE_INFIX=morfessor
MORFESSOR_TUNED_INFIX=morfessor-tuned
MORFESSOR_5BEST_INFIX=morfessor-5best
TRANSLATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L1_L2)
TRANSLATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L2_L1)
endif
if CAN_FLATCAT
FLATCAT_BASELINE_INFIX=flatcat
FLATCAT_TUNED_INFIX=flatcat-tuned
FLATCAT_5BEST_INFIX=flatcat-5best
TRANSLATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L1_L2)
TRANSLATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L2_L1)
endif
if CAN_APERTIUM
APERTIUM_BASELINE_INFIX=baseline-apertium
TRANSLATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(TRANSLATION_L1_L2)

TRANSLATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(TRANSLATION_L2_L1)
endif

TRANSLATIONS=$(TRANSLATIONS_L1_L2) $(TRANSLATIONS_L2_L1)

# evaluations
EVALUATIONS_L1_L2=
EVALUATIONS_L2_L1=
if CAN_NISTBLEU
NISTBLEU_L1_L2=$(L1)-$(L2).nistbleu.$(L2)
NISTBLEU_L2_L1=$(L2)-$(L1).nistbleu.$(L1)
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(NISTBLEU_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(NISTBLEU_L2_L1)
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(NISTBLEU_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(NISTBLEU_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(NISTBLEU_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(NISTBLEU_L2_L1)
endif
if CAN_APERTIUM
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(NISTBLEU_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(NISTBLEU_L1_L2)
endif
endif # NIST bleu

if CAN_TER
TER_L1_L2=$(L1)-$(L2).ter.$(L2)
TER_L2_L1=$(L2)-$(L1).ter.$(L1)
# baseline moses
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(TER_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(TER_L2_L1)
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TER_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TER_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TER_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TER_L2_L1)
endif
if CAN_APERTIUM
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(TER_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(TER_L2_L1)
endif
endif # TER

if CAN_METEOR
METEOR_L1_L2=$(L1)-$(L2).meteor.$(L2)
METEOR_L2_L1=$(L2)-$(L1).meteor.$(L1)
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(METEOR_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(METEOR_L2_L1)
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(METEOR_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(METEOR_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(METEOR_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(METEOR_L2_L1)
endif
if CAN_APERTIUM
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(METEOR_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(METEOR_L2_L1)
endif
endif # METEOR

# OOV
# N.B. the oov is counted from the SOURCE language whereas
# translations go to TARGET
OOV_L1_L2=$(L1)-$(L2).oov.$(L1)
OOV_L2_L1=$(L2)-$(L1).oov.$(L2)
# moses baseline
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(OOV_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(OOV_L2_L1)
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(OOV_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(OOV_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(OOV_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(OOV_L2_L1)
endif
if CAN_APERTIUM
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(OOV_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(OOV_L2_L1)
endif
EVALUATIONS=$(EVALUATIONS_L2_L1) $(EVALUATIONS_L1_L2)

if CAN_TER
if CAN_METEOR
if CAN_NISTBLEU
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(L1)-$(L2).rows
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(L2)-$(L1).rows
if CAN_MORFESS
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L1)-$(L2).rows
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L2)-$(L1).rows
endif
if CAN_FLATCAT
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L1)-$(L2).rows
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L2)-$(L1).rows
endif
if CAN_APERTIUM
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(L1)-$(L2).rows
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(L2)-$(L1).rows
endif
endif # Nistbleu
endif # Meteor
endif # Ter

# convenience for evals
moses-$(L1)-$(L2)-evals: $(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(L1)-$(L2).rows
moses-$(L2)-$(L1)-evals: $(BASELINE_TEST_PREFIX).$(MOSES_BASELINE_INFIX).$(L2)-$(L1).rows
morfessor-$(L1)-$(L2)-evals: $(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L1)-$(L2).rows
morfessor-$(L2)-$(L1)-evals: $(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L2)-$(L1).rows
flatcat-$(L1)-$(L2)-evals: $(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L1)-$(L2).rows
flatcat-$(L2)-$(L1)-evals: $(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L2)-$(L1).rows
apertium-$(L1)-$(L2)-evals: $(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(L1)-$(L2).rows
apertium-$(L2)-$(L1)-evals: $(BASELINE_TEST_PREFIX).$(APERTIUM_BASELINE_INFIX).$(L2)-$(L1).rows


# vim: set ft=automake:
