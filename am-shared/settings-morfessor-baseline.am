## Include to automake project to create baseline settings based on corpus name.

# MOSES_BASELINE_TRAIN is the prefix for the corpus filename 

.PHONY: morfessor-baseline flatcat-baseline \
	morfessor-$(L1) morfessor-$(L2) morfessor-$(L1)-$(L2) morfessor-$(L1)-$(L2)\
	flatcat-$(L1) flatcat-$(L2) flatcat-$(L1)-$(L2) flatcat-$(L2)-$(L1) \
	morfessor-$(L1)-$(L2)-evals morfessor-$(L2)-$(L1)-evals \
	flatcat-$(L1)-$(L2)-evals flatcat-$(L2)-$(L1)-evals

# Settings for baseline language models

if CAN_MORFESS
MOSES_MORFESSOR1BEST_PREFIX=$(MOSES_BASELINE_TRAIN).morfessor.1best

# L1 to L2
MOSES_MORFESSOR1BEST_L2=$(MOSES_MORFESSOR1BEST_PREFIX).blm.$(L1)
MOSES_MORFESSOR1BEST_L1_L2=$(MOSES_MORFESSOR1BEST_PREFIX).binarised.tm.$(L1)-$(L2)
MOSES_MORFESSOR1BEST_L1_L2_DIR=$(MOSES_MORFESSOR1BEST_PREFIX).$(L1)-$(L2)

# L2 to L1
MOSES_MORFESSOR1BEST_L1=$(MOSES_MORFESSOR1BEST_PREFIX).blm.$(L2)
MOSES_MORFESSOR1BEST_L2_L1=$(MOSES_MORFESSOR1BEST_PREFIX).binarised.tm.$(L2)-$(L1)
MOSES_MORFESSOR1BEST_L2_L1_DIR=$(MOSES_MORFESSOR1BEST_PREFIX).$(L2)-$(L1)

endif

if CAN_FLATCAT
MOSES_FLATCAT1BEST_PREFIX=$(MOSES_BASELINE_TRAIN).flatcat.1best
# from L1 to L2
MOSES_FLATCAT1BEST_L2=$(MOSES_FLATCAT1BEST_PREFIX).blm.$(L2)
MOSES_FLATCAT1BEST_L1_L2=$(MOSES_FLATCAT1BEST_PREFIX).binarised.tm.$(L1)-$(L2)
MOSES_FLATCAT1BEST_L1_L2_DIR=$(MOSES_FLATCAT1BEST_PREFIX).$(L1)-$(L2)

# From L2 to L1
MOSES_FLATCAT1BEST_L1=$(MOSES_FLATCAT1BEST_PREFIX).blm.$(L1)
MOSES_FLATCAT1BEST_L2_L1=$(MOSES_FLATCAT1BEST_PREFIX).binarised.tm.$(L2)-$(L1)
MOSES_FLATCAT1BEST_L2_L1_DIR=$(MOSES_FLATCAT1BEST_PREFIX).$(L2)-$(L1)


endif

# Settings for baseline segmenters for L2
if CAN_MORFESS
MORFESSOR_L2=$(BASELINE_CORPUS).$(L2).morfessor
endif
if CAN_FLATCAT
FLATCAT_L2=$(BASELINE_CORPUS).$(L2).flatcat
FLATCAT_L2_CONF=$(BASELINE_CORPUS).$(L2).flatcat.ini
endif

# Convenience variables for models
MORFESSOR_LMS_L2=$(MOSES_MORFESSOR1BEST_L2) \
				$(MOSES_FLATCAT1BEST_L2)
morfessor-$(L1): $(MORFESSOR_L1) 
morfessor-$(L2): $(MORFESSOR_L2) $(MOSES_MORFESSOR1BEST_L2)
flatcat-$(L2): $(FLATCAT_L2) $(MOSES_FLATCAT1BEST_L2)
LANGUAGE_MODELS+=$(MORFESSOR_LMS_L2)
MORFESSOR_TMS_L1_L2=$(MOSES_MORFESSOR1BEST_L1_L2) \
					$(MOSES_FLATCAT1BEST_L1_L2)
MORFESSOR_TMS_L2_L1=$(MOSES_MORFESSOR1BEST_L2_L1) \
					$(MOSES_FLATCAT1BEST_L2_L1)
TRANSLATION_MODELS+=$(MORFESSOR_TMS_L1_L2) $(MORFESSOR_TMS_L2_L1)
MODELS+=$(TRUECASE_MODELS) $(LANGUAGE_MODELS) $(TRANSLATION_MODELS)
morfessor-$(L1)-$(L2): $(MOSES_MORFESSOR1BEST_L1_L2)
morfessor-$(L2)-$(L1): $(MOSES_MORFESSOR1BEST_L2_L1)
flatcat-$(L1)-$(L2): $(MOSES_FLATCAT1BEST_L1_L2)
flatcat-$(L2)-$(L1): $(MOSES_FLATCAT1BEST_L2_L1)

# baseline
if CAN_MORFESS
MORFESSOR_BASELINE_INFIX=morfessor
MORFESSOR_TUNED_INFIX=morfessor-tuned
MORFESSOR_5BEST_INFIX=morfessor-5best
TRANSLATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L1_L2)
TRANSLATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TRANSLATION_L2_L1)
endif
if CAN_FLATCAT
FLATCAT_BASELINE_INFIX=flatcat
FLATCAT_TUNED_INFIX=flatcat-tuned
FLATCAT_5BEST_INFIX=flatcat-5best
TRANSLATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L1_L2)
TRANSLATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TRANSLATION_L2_L1)
endif

TRANSLATIONS+=$(TRANSLATIONS_L1_L2) $(TRANSLATIONS_L2_L1)

if CAN_NISTBLEU
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(NISTBLEU_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(NISTBLEU_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(NISTBLEU_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(NISTBLEU_L2_L1)
endif
endif # NIST bleu

if CAN_TER
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TER_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(TER_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TER_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(TER_L2_L1)
endif
endif # TER

if CAN_METEOR
if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(METEOR_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(METEOR_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(METEOR_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(METEOR_L2_L1)
endif
endif # METEOR

if CAN_MORFESS
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(OOV_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(OOV_L2_L1)
endif
if CAN_FLATCAT
EVALUATIONS_L1_L2+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(OOV_L1_L2)
EVALUATIONS_L2_L1+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(OOV_L2_L1)
endif
EVALUATIONS+=$(EVALUATIONS_L2_L1) $(EVALUATIONS_L1_L2)

if CAN_TER
if CAN_METEOR
if CAN_NISTBLEU
if CAN_MORFESS
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L1)-$(L2).rows
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L2)-$(L1).rows
endif
if CAN_FLATCAT
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L1)-$(L2).rows
EVALUATIONS+=$(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L2)-$(L1).rows
endif
endif # Nistbleu
endif # Meteor
endif # Ter

# convenience for evals
morfessor-$(L1)-$(L2)-evals: $(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L1)-$(L2).rows
morfessor-$(L2)-$(L1)-evals: $(BASELINE_TEST_PREFIX).$(MORFESSOR_BASELINE_INFIX).$(L2)-$(L1).rows
flatcat-$(L1)-$(L2)-evals: $(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L1)-$(L2).rows
flatcat-$(L2)-$(L1)-evals: $(BASELINE_TEST_PREFIX).$(FLATCAT_BASELINE_INFIX).$(L2)-$(L1).rows


# vim: set ft=automake:

