## Include to automake project to use HFST segments for translations.

# FST's segments
%.hfst.1best-comp.norm.tok.$(L2): %.norm.tok.$(L2) $(HFST_L2_COMPOUNDS)
	$(IRSTLM_ADD_START_END) < $< | tr ' ' '\n' |\
		$(HFST_LOOKUP) -q $(HFST_L2_COMPOUNDS) | $(SED) -e 's/^$$//' | tr '\n' '@' |\
		tr  '\n' |\
		cut -f 2 | tr '\n' ' ' | $(SED) -e 's/+?//g' -e 's:</s>:\0\n:g' |\
		head -n -1 |\
		$(IRSTLM_RM_START_END) > $@

%.hfst.1best-morphs.norm.tok.$(L2): %.norm.tok.$(L2) $(HFST_L2_MORPHS)
	$(IRSTLM_ADD_START_END) < $< | tr ' ' '\n' |\
		$(HFST_LOOKUP) -q $(HFST_L2_MORPHS) | $(SED) -e 's/^$$//' | tr '\n' '@' |\
		tr  '\n' |\
		cut -f 2 | tr '\n' ' ' | $(SED) -e 's/+?//g' -e 's:</s>:\0\n:g' |\
		head -n -1 |\
		$(SED) -e 's/\(→ ←\)\+/→ ←/g' -e 's/→ ← → ←/ /g' -e 's/→ ← / /g' -e 's/→ ←$$//' |\
		$(IRSTLM_RM_START_END) > $@

%.norm.tok.hfst.1best.morfannotations.$(L2): %.norm.tok.$(L2) $(HFST_L2_MARKS)
	$(IRSTLM_ADD_START_END) < $< | tr ' ' '\n' |\
		$(HFST_LOOKUP) -q $(HFST_L2_MARKS) | $(SED) -e 's/^$$//' | tr '\n' '@' |\
		tr  '\n' |\
		cut -f 2 | tr '\n' ' ' | $(SED) -e 's/+?//g' -e 's:</s>:\0\n:g' |\
		head -n -1 |\
		$(IRSTLM_RM_START_END) > $@

# For translation with prefix rules, the L1 tokenisation for morphs is the
# same as words
%.hfst.1best-comp.norm.tok.$(L1): %.norm.tok.$(L1)
	cp -v $< $@

%.hfst.1best-morphs.norm.tok.$(L1): %.norm.tok.$(L1)
	cp -v $< $@



# vim: set ft=automake:
